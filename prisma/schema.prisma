// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  telephone String @unique
  password String
  username String?
  created_at DateTime @default(now())
  role Role @relation(fields: [role_id], references: [id])
  role_id Int
  active Boolean @default(true)
}

model Role {
  id Int @id @default(autoincrement())
  name String
  user User[]
  active Boolean @default(true)
}

model Images {
  id Int @id @default(autoincrement())
  name String
  url String
  created_at DateTime @default(now())
  user_id Int
}

model lastxls{
  id Int @id @default(autoincrement())
  url String
  created_at DateTime @default(now())
  type String
}

model survey{
  id Int @id @default(autoincrement())
  shop_id Int
  mercha_id Int?
  seller_id Int?
  imagegroup_id Int
  created_at DateTime @default(now())
  active Boolean @default(true)
  fotos SurveyOnFotos[]
}

model client{
  id Int @id @default(autoincrement())
  shop_id Int
  shop_name String
  address String
  phone Int
  lat Int?
  long Int?
  mercha_id Int
  seller_id Int
  active Boolean @default(true)
}

model Fotos {
  id    Int    @id @default(autoincrement())
  url  String
  survey SurveyOnFotos[]
}

model SurveyOnFotos {
  survey       survey     @relation(fields: [surveyId], references: [id])
  surveyId     Int // relation scalar field (used in the `@relation` attribute above)
  fotos   Fotos @relation(fields: [fotosId], references: [id])
  fotosId Int // relation scalar field (used in the `@relation` attribute above)

  @@id([surveyId, fotosId])
}



